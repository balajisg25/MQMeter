import React, { useState } from 'react';
import {
  AppBar,
  Toolbar,
  Typography,
  TextField,
  Button,
  Box,
  Tabs,
  Tab,
  Menu,
  MenuItem,
  Collapse,
} from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { useNavigate } from 'react-router-dom';

function TopBar() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [tabValue, setTabValue] = useState(0);
  const [anchorEl, setAnchorEl] = useState(null); // Sub-menu anchor for "Home"
  const navigate = useNavigate(); // React Router navigate hook

  const theme = useTheme();
  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm')); // Detect small screens

  const handleLogin = () => {
    if (username && password) {
      setIsLoggedIn(true);
    } else {
      alert('Please enter valid credentials');
    }
  };

  const handleLogout = () => {
    setIsLoggedIn(false);
    setUsername('');
    setPassword('');
  };

  const handleTabChange = (event, newValue) => {
    setTabValue(newValue);
  };

  const handleMenuOpen = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMenuClose = () => {
    setAnchorEl(null);
  };

  const handleSubMenuClick = (route) => {
    navigate(route); // Navigate to the selected route
    setAnchorEl(null); // Close the menu after selection
  };

  return (
    <AppBar position="static" sx={{ backgroundColor: 'green' }}>
      <Toolbar>
        <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
          My App
        </Typography>

        <Collapse in={!isLoggedIn} orientation={isSmallScreen ? 'vertical' : 'horizontal'} unmountOnExit>
          {!isLoggedIn && (
            <Box
              sx={{
                display: 'flex',
                flexDirection: isSmallScreen ? 'column' : 'row',
                alignItems: 'center',
                gap: 1,
              }}
            >
              <TextField
                label="Username"
                variant="outlined"
                size="small"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                sx={{
                  backgroundColor: 'white',
                  borderRadius: 1,
                }}
                InputProps={{
                  style: { color: 'black' },
                }}
              />
              <TextField
                label="Password"
                variant="outlined"
                size="small"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                sx={{
                  backgroundColor: 'white',
                  borderRadius: 1,
                }}
                InputProps={{
                  style: { color: 'black' },
                }}
              />
              <Button color="inherit" variant="outlined" onClick={handleLogin}>
                Login
              </Button>
            </Box>
          )}
        </Collapse>

        <Collapse in={isLoggedIn} orientation="horizontal" unmountOnExit>
          {isLoggedIn && (
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
              <Tabs value={tabValue} onChange={handleTabChange} textColor="inherit" indicatorColor="secondary">
                <Tab label="Home" onClick={handleMenuOpen} />
                <Tab label="Profile" />
                <Tab label="Settings" />
              </Tabs>
              <Button color="inherit" onClick={handleLogout}>
                Logout
              </Button>
            </Box>
          )}
        </Collapse>
      </Toolbar>

      <Menu
        anchorEl={anchorEl}
        open={Boolean(anchorEl)}
        onClose={handleMenuClose}
        MenuListProps={{
          'aria-labelledby': 'home-tab',
        }}
      >
        <MenuItem onClick={() => handleSubMenuClick('/subitem1')}>Sub-item 1</MenuItem>
        <MenuItem onClick={() => handleSubMenuClick('/subitem2')}>Sub-item 2</MenuItem>
        <MenuItem onClick={() => handleSubMenuClick('/subitem3')}>Sub-item 3</MenuItem>
      </Menu>
    </AppBar>
  );
}

export default TopBar;